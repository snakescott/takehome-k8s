apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority
value: 1000000
globalDefault: false
description: "This priority class should be used for XYZ service pods only."
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: low-priority
value: 10
globalDefault: false
description: "This priority class should be used for XYZ service pods only."
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: custom-scheduler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default # Assuming the scheduler operates within the 'default' namespace
  name: custom-scheduler-role
rules:
- apiGroups: [""] # Core API group
  resources: ["pods/binding"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "update"] # 'update' might be needed if scheduler modifies pod (e.g. annotations)
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
# - apiGroups: ["events.k8s.io"] # Or "" for core v1 events
#   resources: ["events"]
#   verbs: ["create", "patch"] # If your scheduler creates events
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: custom-scheduler-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: custom-scheduler
  namespace: default
roleRef:
  kind: Role
  name: custom-scheduler-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-scheduler
  template:
    metadata:
      labels:
        app: custom-scheduler
    spec:
      containers:
      - name: custom-scheduler
        image: docker.io/takehome-scheduler:latest
        imagePullPolicy: Never
        command: ["/usr/local/bin/custom-scheduler"]
        args:
        - "--scheduler-name=my-custom-scheduler"
        - "--namespace=default"
      serviceAccountName: custom-scheduler